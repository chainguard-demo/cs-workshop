apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-templates
data:
  default.conf.template: |
    server {
        listen 80;
        server_name _;

        location /pod {
          return 200 "This is ${POD_NAME}!";
          add_header Content-Type text/plain;
        }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
spec:
  selector:
    app: nginx
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
spec:
  selector:
    matchLabels:
      app: nginx
  replicas: 2
  template:
    metadata:
      labels:
        app: nginx
    spec:
      volumes:
        - name: templates
          configMap:
            name: nginx-templates
        - name: conf
          emptyDir: {}
      initContainers:
        - name: envsubst
          image: cgr.dev/chainguard/wolfi-base
          command:
            - sh
            - -c
            - |
              while read -r template; do
                relative_path="${template#/etc/nginx/templates/}"
                output_path="/etc/nginx/conf.d/${relative_path%.template}"
                awk '{
                  line = $0
                  while (match(line, /\$\{[A-Za-z_][A-Za-z0-9_]*\}/)) {
                    varname = substr(line, RSTART + 2, RLENGTH - 3)
                    val = ENVIRON[varname]
                    line = substr(line, 1, RSTART - 1) val substr(line, RSTART + RLENGTH)
                  }
                  print line
                }' "${template}" > "${output_path}"
              done < <(find /etc/nginx/templates -follow -maxdepth 1 -type f -name '*.template' -print)
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          volumeMounts:
            - name: conf
              mountPath: /etc/nginx/conf.d
            - name: templates
              mountPath: /etc/nginx/templates
      containers:
        - name: nginx
          image: cgr.dev/chainguard/nginx:latest
          ports:
            - containerPort: 80
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          volumeMounts:
            - name: conf
              mountPath: /etc/nginx/conf.d


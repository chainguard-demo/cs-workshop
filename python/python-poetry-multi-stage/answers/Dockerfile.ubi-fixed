FROM registry.access.redhat.com/ubi9/python-311:latest

# 1) Unlike the Debian-based image, the UBI-based image starts as a non-root user. In order to execute our RUN commands, we'll need to switch back to a privileged user
USER root

ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    POETRY_NO_INTERACTION=1 \
    POETRY_HOME='/opt/venv/usr/' \
    POETRY_CACHE_DIR='/var/cache/pypoetry' \
    PATH="/opt/venv/usr/bin:$PATH" \
    WEB_CONCURRENCY=5

WORKDIR /app

COPY ./app poetry.lock pyproject.toml ./

# 2) UBI-based images use the dnf package manager instead of apt
# 3) The libvshadow-utils package does not exist in the UBI ecoystem. Instead, the shadow-utils package exists
RUN dnf update -y && \
    dnf install -y shadow-utils && \
    python3.11 -m venv /opt/venv && \
    pip3 install --upgrade pip && \
    pip3 install poetry==1.7.1 && \
    pip3 install urllib3==1.26.18 && \
    pip3 install aiohttp==3.9.1 && \
    pip install uvicorn[full] && \
    pip install --no-cache-dir fastapi && \
    poetry config --local virtualenvs.create true && \
    poetry config --local virtualenvs.in-project true && \
    poetry config --unset http-basic.github-mlutils

# BONUS) Switch back to the non-root user before starting the application
USER 1001

EXPOSE 8000

ENTRYPOINT ["poetry", "run", "uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000"]